name=microUPDI Firmware Uploader
version=0.0.1

# Define dummy commands used to skip the unnecessary compilation of whatever sketch is open in the Arduino IDE to make the upload go faster
tools.dummy_cmd={runtime.platform.path}/scripts/dummy-compiler-command.sh
tools.dummy_cmd.windows={runtime.platform.path}/scripts/dummy-compiler-command.bat
tools.dummy_preproc_macros_cmd={runtime.platform.path}/scripts/dummy-preproc-macros-command.sh
tools.dummy_preproc_macros_cmd.windows={runtime.platform.path}/scripts/dummy-preproc-macros-command.bat

recipe.c.o.pattern="{tools.dummy_cmd}"
recipe.cpp.o.pattern="{tools.dummy_cmd}"
recipe.S.o.pattern="{tools.dummy_cmd}"
recipe.ar.pattern="{tools.dummy_cmd}"
recipe.c.combine.pattern="{tools.dummy_cmd}"
recipe.objcopy.eep.pattern="{tools.dummy_cmd}"
recipe.objcopy.hex.pattern="{tools.dummy_cmd}"
recipe.output.tmp_file={build.project_name}.hex
recipe.output.save_file={build.project_name}.{build.variant}.hex

## Compute size
recipe.size.pattern="{tools.dummy_cmd}"
recipe.size.regex=^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*
recipe.size.regex.data=^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*
recipe.size.regex.eeprom=^(?:\.eeprom)\s+([0-9]+).*

## Preprocessor

recipe.preproc.includes="{tools.dummy_cmd}"

recipe.preproc.macros="{tools.dummy_preproc_macros_cmd}" "{build.path}/preproc" "ctags_target_for_gcc_minus_e.cpp"

# AVR Uploader/Programmers tools
# ------------------------------

tools.avrdude.script.path={runtime.platform.path}/scripts
# A wrapper script is used around avrdude to prevent spurious upload errors caused by the expected verification error at 0x7000
tools.avrdude.wrapper.path={script.path}/avrdude-wrapper.sh
tools.avrdude.wrapper.path.windows={script.path}/avrdude-wrapper.bat

tools.avrdude.path={runtime.tools.avrdude.path}
tools.avrdude.cmd.path={path}/bin/avrdude

tools.avrdude.config.path={path}/etc/avrdude.conf

tools.avrdude.network_cmd={runtime.tools.arduinoOTA.path}/bin/arduinoOTA

tools.avrdude.upload.params.verbose=-v
tools.avrdude.upload.params.quiet=-q -q
# tools.avrdude.upload.verify is needed for backwards compatibility with IDE 1.6.8 or older, IDE 1.6.9 or newer overrides this value
tools.avrdude.upload.verify=
tools.avrdude.upload.params.noverify=-V
tools.avrdude.upload.pattern="{wrapper.path}" "{cmd.path}" "{config.path}" {build.mcu} {upload.protocol} "{serial.port}" {upload.speed} "{runtime.platform.path}" "{build.path}"

tools.avrdude.program.params.verbose=-v
tools.avrdude.program.params.quiet=-q -q
# tools.avrdude.program.verify is needed for backwards compatibility with IDE 1.6.8 or older, IDE 1.6.9 or newer overrides this value
tools.avrdude.program.verify=
tools.avrdude.program.params.noverify=-V
tools.avrdude.program.pattern="{cmd.path}" "-C{config.path}" {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} "-Uflash:w:{build.path}/{build.project_name}.hex:i"

tools.avrdude.erase.params.verbose=-v
tools.avrdude.erase.params.quiet=-q -q
tools.avrdude.erase.pattern="{cmd.path}" "-C{config.path}" {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m

tools.avrdude.bootloader.params.verbose=-v
tools.avrdude.bootloader.params.quiet=-q -q
tools.avrdude.bootloader.pattern="{cmd.path}" "-C{config.path}" {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} "-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i" -Ulock:w:{bootloader.lock_bits}:m

tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}

tools.avrdude.upload.network_pattern="{network_cmd}" -address {serial.port} -port {upload.network.port} -sketch "{build.path}/{build.project_name}.hex" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}

# USB Default Flags
# Default blank usb manufacturer will be filled in at compile time
# - from numeric vendor ID, set to Unknown otherwise
build.usb_manufacturer="Unknown"
build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'
